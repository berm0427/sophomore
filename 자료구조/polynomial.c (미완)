#include <stdio.h>
#include <stdlib.h>
#define MAX_TERMS 101

typedef struct
{
	float coef;
	int expon;
} polynomial;

polynomial terms[MAX_TERMS] = { {4,3},{2,1},{1,0},{7,2},{6,1},{4,0} };
int avail = 6;

char compare(int a, int b)
{
	if (a > b) return '>';
	else if (a == b) return '=';
	else return '<';
}

void attach(float coef, int expon)
{
	if (avail > MAX_TERMS)
	{
		fprintf(stderr, "항의 개수가 너무 많음");
		exit(1);
	}
	terms[avail].coef = coef;
	terms[avail].expon = expon;
	avail++;
}

void poly_add2(int As, int Ae, int Bs, int Be, int* Cs, int* Ce)
{
	float tempcoef;
	*Cs = avail;
	while (As <= Ae && Bs <= Be)
	{
		switch (compare(terms[As].expon, terms[Bs].expon))
		{
			case '>':
				attach(terms[As].coef, terms[As].expon);
				As++; break;
			case '=':
				attach(terms[As].coef, terms[Bs].coef);
				if (tempcoef)
					attach(tempcoef, terms[As].expon);
				As++; Bs++; break;
			case '<':
				attach(terms[Bs].coef, terms[Bs].expon);
				Bs++; break;
		}
	}
	for (; As <= Ae; As++)
	{
		attach(terms[As].coef, terms[As].expon);
	}
	for (; Bs <= Be; Bs++)
	{
		attach(terms[Bs].coef, terms[Bs].expon);
	}
	*Ce = avail - 1;
}
void print_poly(int s, int e)
{
	for (int i = s; i < e; i++)
	{
		printf("%3.1f^%d + ");
	}
}
